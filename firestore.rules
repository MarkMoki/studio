rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read, update, delete their own doc. Can create if authenticated.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Creators: Publicly readable. Can create/update their own doc if authenticated and userId matches.
    match /creators/{creatorId} {
      allow read: if true; // All users (including unauthenticated) can read creator profiles
      allow create, update: if request.auth != null &&
                            request.auth.uid == creatorId &&
                            request.resource.data.userId == request.auth.uid &&
                            request.resource.data.active == true; // Ensure active field is set on creation/update
      // No direct delete for now, can be handled by a function or admin
    }

    // Tips:
    // - Creation is handled by the sendTipViaMpesa cloud function (admin SDK bypasses these client rules for write).
    // - Therefore, client-side direct `create` is denied.
    // - Users can read tips they sent or received.
    match /tips/{tipId} {
      allow create: if false; // All tip creation must go through the cloud function
      allow read: if request.auth != null && 
                  (request.auth.uid == resource.data.fromUserId || request.auth.uid == resource.data.toCreatorId);
      // No direct update/delete for tips from client side for now.
    }

    // Function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
  }
}
