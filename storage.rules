
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Custom function to check user ownership
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Custom function to check size limit in bytes
    function isUnderSizeLimit(maxBytes) {
      return request.resource.size < maxBytes;
    }

    // Profile images for any user (creators or supporters)
    // Stored under users/{userId}/profile/{fileName}
    match /users/{userId}/profile/{fileName} {
      // Anyone can read profile pictures (publicly accessible)
      allow read: if true;
      // Only the authenticated user can write to their own profile picture path
      // Max 2MB for profile pictures
      allow write: if isUser(userId) && isUnderSizeLimit(2 * 1024 * 1024) &&
                   request.resource.contentType.matches('image/.*');
    }

    // Creator-specific images, like cover photos
    // Stored under creators/{creatorId}/cover/{fileName}
    // Note: creatorId here would be the same as userId for the creator
    match /creators/{creatorId}/cover/{fileName} {
      // Anyone can read cover images
      allow read: if true;
      // Only the authenticated user (who is the creator) can write to their cover image path
      // Max 5MB for cover images
      allow write: if isUser(creatorId) && isUnderSizeLimit(5 * 1024 * 1024) &&
                   request.resource.contentType.matches('image/.*');
    }

    // Deny all other writes by default to paths not explicitly matched.
    // Reads are generally public unless specified otherwise.
    // match /{allPaths=**} {
    //   allow read: if true; // Or restrict as needed
    //   allow write: if false;
    // }
  }
}
