
service firebase.storage {
  match /b/{bucket}/o {

    // Custom function to check user ownership
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Custom function to check size limit in bytes
    function isUnderSizeLimit(maxBytes) {
      return request.resource.size < maxBytes;
    }

    // Profile images (2MB max)
    // Path should match how files are uploaded in the app code.
    // e.g., users/{userId}/profile.{extension} or users/{userId}/profilePic
    match /users/{userId}/profile.{extension} {
      allow read: if true;
      allow write: if isUser(userId) && isUnderSizeLimit(2 * 1024 * 1024);
    }
     match /users/{userId}/profile/{fileName} { // More generic to catch any file in profile folder
      allow read: if true;
      allow write: if isUser(userId) && isUnderSizeLimit(2 * 1024 * 1024);
    }


    // Creator cover images (5MB max)
    // Path should match upload path. e.g., creators/{creatorId}/cover.{extension}
    match /creators/{creatorId}/cover.{extension} {
      allow read: if true;
      allow write: if isUser(creatorId) && isUnderSizeLimit(5 * 1024 * 1024);
    }
    match /creators/{creatorId}/cover/{fileName} { // More generic
      allow read: if true;
      allow write: if isUser(creatorId) && isUnderSizeLimit(5 * 1024 * 1024);
    }
    

    // Deny all other paths by default if not explicitly allowed
    // It's good practice to uncomment this for production.
    // match /{allPaths=**} {
    //   allow read, write: if false;
    // }
  }
}
